spring:
  application:
    name: agent-api

  threads:
    virtual:
      enabled: true
  output:
    ansi:
      enabled: ALWAYS
  ai:
    mcp:
      client:
        enabled: true
        name: embabel
        version: 1.0.0
        request-timeout: 30s
        type: SYNC

        stdio:
          connections:
            docker-mcp:
              command: docker
              args:
                - run
                - -i
                - --rm
                - alpine/socat
                - STDIO
                - TCP:host.docker.internal:8811
    chat:
      observations:
        include-completion: true
        include-prompt: true
        include-error-logging: true

    ollama:
      base-url: http://localhost:11434

management:
  tracing:
    sampling:
      probability: 1.0
    enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  observations:
    http:
      client:
        requests:
          name: http.client.requests
  zipkin:

    tracing:
      endpoint: http://localhost:9411/api/v2/spans


embabel:
  agent-platform:
    scanning:
      annotation: true
      publisher: false
    ranking:
      llm: gpt-4.1

  autonomy:
    agent-confidence-cut-off: 0.6
    goal-confidence-cut-off: 0.6
  process-id-generation:
    include-agent-name: false
    include-version: false
  model:
    llms:
      best: gpt-4.1
      cheapest: gpt-4.1-nano
    # embedding-services:
    #   chunk: text-embedding-ada-002
    #   schema: text-embedding-ada-002

logging:
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5level) %clr(%logger{0}){cyan} %clr(-){faint} %msg%n"
  level:
    root: INFO
    org.springframework: INFO

    # Super verbose tracing for Zipkin
    zipkin2: TRACE
    io.micrometer: TRACE
    io.micrometer.tracing: TRACE
    io.micrometer.tracing.zipkin2: TRACE
    io.zipkin: TRACE
    brave: TRACE

    # Spring Boot specific tracing
    org.springframework.web.servlet.DispatcherServlet: TRACE
    org.springframework.boot.actuate.trace: TRACE
    org.springframework.boot.autoconfigure.zipkin: TRACE
    org.springframework.cloud.sleuth: TRACE

    # HTTP client tracing
    org.apache.http: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG

    # Actuator and context loading
    org.springframework.boot.actuate: DEBUG
    org.springframework.boot.autoconfigure: DEBUG
    org.springframework.context: DEBUG
